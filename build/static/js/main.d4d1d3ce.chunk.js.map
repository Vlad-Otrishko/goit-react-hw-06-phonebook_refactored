{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/Contact/Contact.module.css"],"names":["module","exports","addItem","createAction","deleteItem","filterItems","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","reset","className","s","form","onSubmit","preventDefault","id","actions","wrapper","htmlFor","input","type","pattern","title","required","onChange","submitButton","Contact","record","spacing","ContactList","items","useSelector","state","contacts","filter","normalizedFilter","toLowerCase","visibleList","includes","list","map","item","line","deleteButton","onClick","Filter","filterLabel","event","App","container","headline","console","dir","createReducer","payload","phonebookRecords","newRecord","normalizedNewName","some","isUnique","alert","contact","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d4d1d3ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2aa8l\",\"line\":\"ContactList_line__ApMHF\",\"deleteButton\":\"ContactList_deleteButton__3wpR2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1XGhV\",\"App-logo\":\"App_App-logo__295sC\",\"App-logo-spin\":\"App_App-logo-spin__1rRlt\",\"App-header\":\"App_App-header__2NcR9\",\"App-link\":\"App_App-link__H1C7q\",\"headline\":\"App_headline__zuJzu\",\"container\":\"App_container__3s7tw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__8Z9me\",\"filterLabel\":\"Filter_filterLabel__kiD5p\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nconst addItem = createAction('contacts/add');\r\nconst deleteItem = createAction('contacts/delete');\r\nconst filterItems = createAction('contacts/changeFilter');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {addItem, deleteItem, filterItems};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst ContactForm = () => {\r\n  \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default: return;\r\n    }\r\n  };\r\n const  handleSubmit = e => {\r\n    e.preventDefault();\r\n   const id = shortid.generate();\r\n   dispatch(actions.addItem({ name, number, id }));\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n      setName('');\r\n      setNumber('');\r\n  };\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <div className={s.wrapper}>\r\n          <label htmlFor={nameInputId}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={nameInputId}\r\n              value={name}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor={numberInputId}>\r\n            Phone Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={numberInputId}\r\n              value={number}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button className={s.submitButton } type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n}\r\nexport default ContactForm;\r\n\r\n","import React from 'react';\r\nimport s from './Contact.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contact = ({ name, number }) => {\r\n    return (\r\n      <p className={s.record}>\r\n        <span className={s.name}> {name}</span> <span className={s.spacing}>:</span>\r\n        <span className={s.number}>{number}</span>\r\n      </p>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport Contact from '../Contact/Contact';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const items = useSelector(state => state.contacts.items);\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const visibleList = items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter));\r\n\r\n    return (\r\n      <ul className={s.list}>\r\n        {visibleList.map(item => (\r\n          <li key={item.id} className={s.line}>\r\n            <Contact\r\n              name={item.name}\r\n              number={item.number}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className={s.deleteButton}\r\n              onClick={() => dispatch(actions.deleteItem(item.id))}\r\n            ></button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n\r\n};\r\n\r\nexport default ContactList;\r\n\r\n","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n    return(\r\n    <label className={s.filterLabel}>\r\n        Search by name\r\n        <input type=\"text\" className={s.filter} value={value}\r\n          onChange={(event)=>dispatch(actions.filterItems(event.currentTarget.value))}/>\r\n        </label>\r\n        )\r\n}\r\n\r\n\r\nexport default Filter;\r\n\r\n","\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport s from './App.module.css';\n\n\nconst App = () => {\n  \n    return (\n      <div className={s.container}>\n        <h1 className={s.headline}>Phone book</h1>\n        <ContactForm/>\n        <h2 className={s.headline}>Contacts</h2>\n        <Filter/>\n        <ContactList/>\n      </div>\n    );\n\n}\nexport default App;\n","import actions from './contacts-actions';\r\nimport { combineReducers, createReducer } from '@reduxjs/toolkit';\r\n\r\nconst initialItems = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconsole.dir(actions);\r\nconst items = createReducer(initialItems, {\r\n  [actions.addItem]: (state, { payload }) =>\r\n    isUnique(state, payload)\r\n      ? [...state, payload]\r\n      : alert('THIS NAME IS ALREADY PRESENT IN A PHONEBOOK'),\r\n  [actions.deleteItem]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterItems]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n\r\nfunction isUnique (phonebookRecords, newRecord) {\r\n  const normalizedNewName = newRecord.name.toLowerCase();\r\n  return !phonebookRecords.some(\r\n    ({ name }) => name.toLowerCase() === normalizedNewName,\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'phonebookContacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n    \r\n// const store = createStore(persistedReducer, composeWithDevTools());\r\n\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Z7uh\",\"wrapper\":\"ContactForm_wrapper__3tFRc\",\"input\":\"ContactForm_input__3q9d1\",\"submitButton\":\"ContactForm_submitButton__1B8bV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"record\":\"Contact_record__3Zi9t\",\"name\":\"Contact_name__2nc0M\",\"number\":\"Contact_number__3p8Wx\",\"spacing\":\"Contact_spacing__329dZ\"};"],"sourceRoot":""}